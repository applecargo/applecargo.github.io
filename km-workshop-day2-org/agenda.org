#+REVEAL_ROOT: http://cdn.jsdelivr.net/reveal.js/3.0.0/
#+REVEAL_MARGIN: 0.1
#+REVEAL_MIN_SCALE: 0.5
#+REVEAL_MAX_SCALE: 2.5
#+REVEAL_TRANS: none
#+REVEAL_THEME: beige

* Puredata 복습 숙제

  - 369 게임처럼 작동하는 패치를 만들어보세요.
  - 12짝!45짝!78짝! ...
  - 사운드 파일: [[http://applecargo.github.io/km-workshop-day2-org/clap.wav]]

  #+REVEAL: split
  STEP 1

  metro로 작동하는 카운터를 만든다.

  #+ATTR_REVEAL: :frag (appear)
  - loadbang을 이용해서 카운터가 1부터 시작하게 만들 수 있다.

  #+REVEAL: split
  STEP 2

  카운트가 3의 배수인 경우에 소리가 play되게 한다.

  #+ATTR_REVEAL: :frag (appear)
  - mod는 나누고 남은 나머지를 준다. '~의 배수'란 그 수로 나누면 나머지가 0...
  - == 은 '~과 같다'는 것에 대한 답을 숫자 1/0으로 준다.
  - select (줄여서 sel) 은 입력된 값이 리스트에 포함되어있을 때만 선택적으로 bang을 준다.

  #+REVEAL: split
  STEP 3

  카운트가 3의 배수가 아닌 경우에 그 숫자가 프린트 되도록 한다.

  #+ATTR_REVEAL: :frag (appear)
  - != 은 '~과 같지 않다'는 것에 대한 답을 숫자 1/0으로 준다.
  - spigot을 이용하면 메세지의 전달을 막았다가 보냈다가 가능.
  - trigger(줄여서 t)를 이용하면, 어떤 행동이 끝난 후에 다음 행동이 발생하도록 타이밍 조절 가능.

* Arduino

  - [[http://arduino.cc]]
  - [[https://www.adafruit.com/categories/171]]
  - [[https://www.sparkfun.com/categories/242]]

  - OSHW (Open Source HardWare)
  - 하드웨어 & 소프트웨어

* Teensy

  - 고성능의 arduino. (아두이노 16MHz, 틴지 96MHz)
  - 3.x 는 ARM 칩 사용
  - 뭔가 기능이 엄청 많음. 터치 센싱.. 오디오출력(DAC).. 시계(RTC) 등등..
  - 기본 기능에도 충실.. digital/analog 입출력(GPIO) 많은 편..

  - _주의! teensy는 arduino와 달리, 입력 전압이 5V 이하!_

* 전기

  - 전압 == 압력
  - 전류 == 유량
  - 저항 == 수도 굵기
  - 에너지 == 에너지

* digital

  #+ATTR_REVEAL: :frag (appear)
  - 0 과 1.
  - ON/OFF.
  - PLAY/STOP.
  - 남자/여자. 흑인/백인.
  - 이분법.

  - 입력 : 스위치.
  - 출력 : LED? 선풍기? 사운드.

* analog

  #+ATTR_REVEAL: :frag (appear)
  - 회색.
  - 온도. 습도. 고도.
  - 정도. how much.

  - 100점 만점에 56점?
  - 1000000점 만점에 583789점..

  - 입력 : 전압 측정, 저항 측정, 가속도 측정
  - 출력 : 모터 회전? 소리 내기?

* 아두이노 해보기

  - [[https://www.arduino.cc/en/Main/OldSoftwareReleases#previous]] : arduino 1.6.11
  - [[https://www.pjrc.com/teensy/td_download.html]] : teensyduino
  - [[https://learn.adafruit.com/adafruit-arduino-lesson-1-blink/overview]] : blink

  #+REVEAL: split

  #+BEGIN_SRC cpp
// blink
void setup()
{
    pinMode(13, OUTPUT);
}

void loop()
{
    digitalWrite(13, HIGH);
    delay(1000);
    digitalWrite(13, LOW);
    delay(1000);
}
  #+END_SRC

  #+REVEAL: split

  - void setup() 함수(function) --> [setup] Puredata의 Object 처럼. '무엇'을 받고, '무엇'을 내줌.
  - void는 없음. / () 빈 괄호. 없음. puredata에서 inlet도 outlet도 없는 obj. 비슷.
  - setup, loop
  - pinMode - INPUT, OUTPUT, INPUT_PULLUP
  - digitalRead, digitalWrite
  - analogRead, analogWrite
  - delay
    
  #+REVEAL: split

  #+BEGIN_SRC cpp
// blink + Serial monitoring
int count = 0;

void setup()
{
    Serial.begin(9600); // comm. speed (Baudrate) == 9600
    Serial.println("app start");
    pinMode(13, OUTPUT);
    Serial.println("pinMode(13, OUTPUT); - done.");
}

void loop()
{
    count++;
    Serial.print(count);

    Serial.print(" .");
    digitalWrite(13, HIGH);
    delay(1000);

    Serial.println("/");
    digitalWrite(13, LOW);
    delay(1000);
}
  #+END_SRC
  
  #+REVEAL: split
  - Serial
  - Serial.begin
  - Serial.print
  - Serial.println

  - int count = 0; - 변(하는) 수
  - Serial.print(0); vs Serial.print(count);
  - Serial.print(count); vs Serial.print("count");
  - data-type.. boolean int float double
  - Find reference...

* Firmata

  - International English
  - 국제 통용어, passport?

  #+REVEAL: split

  #+BEGIN_SRC cpp
// Supports as many analog inputs and analog PWM outputs as possible.
// This example code is in the public domain.

#include <Firmata.h>

#define NUM_OF_TOUCHINPUTS 12

byte touchPinIdx = 0;
byte count = 0;

int pins[NUM_OF_TOUCHINPUTS] = {0, 1, 15, 16, 17, 18, 19, 22, 23, 25, 32, 33}

void analogWriteCallback(byte pin, int value) {;}

void setup()
{
  Firmata.setFirmwareVersion(0, 1);
  Firmata.attach(ANALOG_MESSAGE, analogWriteCallback);
  Firmata.begin(57600);
}

void loop()
{
    count++;
    touchPinIdx = count % NUM_OF_TOUCHINPUTS;
    
    Firmata.sendAnalog(analogPin, touchRead(pins[touchPinIdx]));
}
  #+END_SRC

* Puredata에 라이브러리 깔기

  - Find externals... 이용하기
  - OSX ==> darwin, WIN ==> windows
  - externals 폴더 만들고 (뒤섞이지 않게) 그 안에 설치.
  - 일반적으로 많이 쓰이는 것들.. zexy cyclone ggee creb
  - PATH 설정.
  - 3가지 종류의 라이브러리.
    - patch (no binary)
    - individual library - cyclone
    - bundled library - zexy creb
  - bundled library loading.. zexy creb pdstring

* Puredata에서 아두이노 연결하기 (Firmata)

  [[https://github.com/reduzent/pduino.git]]
  - 의존 라이브러리 : comport, pdstring
  - bundled library loading.. pdstring

  - arduino
  - devices, open, devicename, close
  - route analog
  - route 0
  - arduino-gui

* 납땜하기

  - [[https://learn.adafruit.com/adafruit-guide-excellent-soldering/tools]]

  - 시간차 공격. 인두먼저. 납은 조금 있다.
  - 적당한 시간동안 가열. count 3!

* scope.pd

  - 그래프(graph!)

* END

  - 숙제는 forum에 업로드.
  - solution은 다음주 중으로...?
  - 고맙습니다.
